/*
TC: O(N) as we are comparing the pattern in main string
SC: O(m) we are using hashmap to store frequency of characters in pattern

Approach: basically we are trying to store the elements and traverse main string by
updating count and making changes respectively
 */

class AnagramsPattern{

    public List<Integer> findAnagrams(String s, String p) {

        //sliding window (Two Pointers)
        Map<Character,Integer> map = new HashMap<>();
        List<Integer> res = new ArrayList<>();
        for (int i = 0; i < p.length(); i++){
            char c = p.charAt(i);
            map.put(c,map.getOrDefault(c,0)+1);
        }
        int match =0;
        for (int i = 0; i < s.length(); i++){
            char in = s.charAt(i);
            if (map.containsKey(in)){
                int count = map.get(in);
                count--;
                if (count == 0){
                    match++;
                }
                map.put(in,count);
            }

            if (i >= p.length()){
                char out = s.charAt(i - p.length());
                if (map.containsKey(out)){
                    int count = map.get(out);
                    count++;

                    if (count == 1){
                        match--;
                    }
                    map.put(out,count);
                }
            }
            if (match == map.size()){
                res.add(i - p.length() + 1);
            }
        }

        return res;
    }
}